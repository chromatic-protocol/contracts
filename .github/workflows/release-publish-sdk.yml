# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://docs.github.com/en/actions/publishing-packages/publishing-nodejs-packages

name: release and export source

on:
  pull_request:
    types:
      - closed
    paths:
      - contracts/**
      - deploy/**
      - package.sdk.json
      - hardhat.config.ts
      - .github/workflows/release-publish-sdk.yml
permissions:
  contents: write

jobs:
  Release:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.semantic-release.outputs.tag }}
      # changelog: ${{ steps.semantic-release.outputs.changelog }}
    steps:
      - uses: chromatic-protocol/action-semantic-release@main
        id: semantic-release
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
  Export:
    needs: Release
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      NODE_AUTH_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
    steps:
      - uses: chromatic-protocol/action-setup-foundry-yarn@v1
        with:
          scope: '@chromatic-protocol'
          ignore-scripts: false
          node-auth-token: '${{ secrets.GITHUB_TOKEN }}'

      - name: build SDK
        env:
          ALCHEMY_KEY: ${{ secrets.ALCHEMY_KEY }}
        run: |
          yarn clean
          yarn build
      # export src.ts to chromatic-protocol/sdk
      - uses: actions/checkout@v3
        with:
          repository: chromatic-protocol/sdk
          ref: main
          path: sdk
          ssh-key: ${{ secrets.SSH_SDK_TYPECHAIN }}
      - run: cp -r package-build/src.ts sdk/src/gen
      - uses: tibdex/github-app-token@v1
        id: generate-token
        with:
          app_id: ${{ secrets.PR_ACTION_APP_ID }}
          private_key: ${{ secrets.PR_ACTION_PRIVATE }}
      - name: pull-request
        uses: peter-evans/create-pull-request@v5
        with:
          base: main
          branch: develop
          path: sdk
          add-paths: src.ts/**
          token: ${{ steps.generate-token.outputs.token }}
